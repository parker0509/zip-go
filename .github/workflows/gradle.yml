name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # main 브랜치에 푸시할 때마다 CI/CD 실행
  pull_request:
    branches:
      - main  # main 브랜치에 대한 PR이 생성될 때마다 CI/CD 실행

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # 리포지토리 코드를 체크아웃

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew build  # Gradle로 프로젝트 빌드

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/zip-go:${{ github.sha }} .  # 이미지를 빌드하고 SHA로 태그 지정

      - name: Push Docker image to DockerHub
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/zip-go:${{ github.sha }}  # Docker Hub에 푸시

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: SSH to EC2 and deploy
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd app
            docker-compose stop
            docker-compose rm -f
            docker rmi sa2ntjulian/study-matching:latest
            docker-compose up -d
